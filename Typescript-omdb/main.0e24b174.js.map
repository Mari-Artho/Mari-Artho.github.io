{"version":3,"sources":["ts/models/iService.ts","ts/main.ts"],"names":[],"mappings":"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","file":"main.0e24b174.js","sourceRoot":"../src","sourcesContent":["export interface iService {\n    getData(useData: (movieInfo: any) => void): void;\n    getMovieData(title: string, useData: (movieInfo: any) => void): void;\n}//The name of getData () can be anything. Same as naming the Variable as I like.\n\n\nexport class Service implements iService {\n    getData(useData: (movieInfo: any) => void): void { getOMDBData(useData); }\n    // parameter useData: function that shows how to use the data;\n    // the function itself takes one parameter (movieInfo) and returns void\n    getMovieData(title: string, useData: (movieInfo: any) => void): void { getMovieDataFromOMDB(title, useData); }\n    constructor() {}\n}\n\n// any means that you return either nothing (void) or anything,\n// void means that no value is returned.\nfunction getOMDBData(useData): void {\n    //Get data from API.\n    fetch(\"http://www.omdbapi.com/?i=tt3896198&apikey=453d560a\")\n      .then(response => response.json())\n      // the map function is below\n      .then(movieInfo => useData(movieInfo))\n      .catch((error) => {\n        console.error('Error:', error);\n      }\n      );\n  }\n\n  function getMovieDataFromOMDB(title, useData): void {\n    //Get data from API.\n    fetch(\"http://www.omdbapi.com/?t=\" + encodeURIComponent(title) + \"&apikey=453d560a\")\n      .then(response => response.json())\n      // the map function is below\n      .then(movieInfo => useData(movieInfo))\n      .catch((error) => {\n        console.error('Error:', error);\n      }\n      );\n  }","import { iService, Service } from \"./models/iService\";\n\n// create new service instance to be used here by main.ts\nlet service: iService = new Service;\n\nfunction logData(movieInfo: { Title: string; Director: string; Year: string; Poster:string; }): void{\n  console.log(`Title: ${movieInfo.Title}, director: ${movieInfo.Director}, year: ${movieInfo.Year}, poster: ${movieInfo.Poster}`);\n}\n\nfunction useData(movieInfo: { Title: string; Director: string; Year: string;Poster:string }): void{\n  //show title\n  document.getElementById(\"title\").innerText = movieInfo.Title;\n  //show director's name\n  document.getElementById(\"director\").innerText = \"Director is \" +  movieInfo.Director;\n  //show movie's year\n  document.getElementById(\"year\").innerText = movieInfo.Year;\n  // //show poster image\n  let showImg =  movieInfo.Poster;\n  let imgPoster = document.getElementById(\"imgPoster\");\n  imgPoster.setAttribute(\"src\", showImg);\n}\n\n\n\nfunction search (): void{\n  let title = (<HTMLInputElement>document.getElementById(\"inputTitle\")).value;\n  service.getMovieData(title, useData);\n}\n\nlet clickBtn =  document.getElementById(\"searchBtn\").addEventListener(\"click\", search);"]}